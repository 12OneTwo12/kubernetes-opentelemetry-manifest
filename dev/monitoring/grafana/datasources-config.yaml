apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-dev-svc:9090/prometheus
        uid: prometheus
        isDefault: true
        version: 1
        editable: true
        jsonData:
          timeInterval: "60s"
          httpMethod: POST
          exemplarTraceIdDestinations:
            - datasourceUid: tempo
              name: trace_id
      
      - name: Loki
        type: loki
        access: proxy
        url: http://loki-dev-svc:3100
        uid: loki
        version: 1
        editable: true
        jsonData:
          derivedFields:
            # Match trace_id in log attributes
            - name: "TraceID"
              matcherRegex: "trace_id\":\"([a-f0-9]+)"
              url: "$${__value.raw}"
              datasourceUid: tempo
              urlDisplayLabel: "View Trace"
            # Match trace_id in log line
            - name: "TraceID"
              matcherRegex: "\\[trace_id=([a-f0-9]+)\\]"
              url: "$${__value.raw}"
              datasourceUid: tempo
              urlDisplayLabel: "View Trace"
      
      - name: Tempo
        type: tempo
        access: proxy
        url: http://tempo-dev-svc:3200
        uid: tempo
        version: 1
        editable: true
        jsonData:
          tracesToLogs:
            datasourceUid: loki
            filterByTraceID: true
            filterBySpanID: false
            tags: ['service', 'namespace', 'environment', 'pod']
            mapTagNamesEnabled: true
            mappedTags:
              - key: service
                value: service.name
              - key: pod
                value: k8s.pod.name
              - key: namespace
                value: service.namespace
            spanStartTimeShift: "-1h"
            spanEndTimeShift: "1h"
          tracesToMetrics:
            datasourceUid: prometheus
            tags:
              - key: service.name
                value: service_name
              - key: service.namespace
                value: namespace
            queries:
              - name: "Request rate"
                query: "sum(rate(http_server_request_duration_milliseconds_count{service_name=\"$${service.name}\"}[5m]))"
              - name: "Error rate"
                query: "sum(rate(http_server_request_duration_milliseconds_count{service_name=\"$${service.name}\",http_response_status_code=~\"5..\"}[5m]))"
          nodeGraph:
            enabled: true
          serviceMap:
            datasourceUid: prometheus
          search:
            hide: false
          lokiSearch:
            datasourceUid: loki
