apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 60s
      evaluation_interval: 60s
      external_labels:
        monitor: 'dev-monitor'
        environment: 'dev'

    # OTLP Write Receiver will handle OpenTelemetry metrics
    # The following settings ensure proper resource attribute handling
    # Resource attributes are automatically converted to Prometheus labels
    # when using --enable-feature=otlp-write-receiver flag

    # OTLP endpoint configuration for OpenTelemetry Dashboard
    otlp:
      keep_identifying_resource_attributes: true
      promote_resource_attributes:
        # REQUIRED FOR THIS DASHBOARD
        - service.instance.id
        - service.name
        - service.namespace
        - deployment.environment.name
        # RECOMMENDED FOR OTEL METRICS IN GENERAL
        - service.version
        - cloud.availability_zone
        - cloud.region
        - container.name
        - deployment.environment
        - k8s.cluster.name
        - k8s.container.name
        - k8s.cronjob.name
        - k8s.daemonset.name
        - k8s.deployment.name
        - k8s.job.name
        - k8s.namespace.name
        - k8s.pod.name
        - k8s.replicaset.name
        - k8s.statefulset.name

    scrape_configs:
      # OTEL Collector internal metrics (optional)
      - job_name: 'otel-collector-internal'
        scrape_interval: 60s
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_name]
            regex: otel-collector
            action: keep
          - source_labels: [__address__]
            regex: ([^:]+)(?::\d+)?
            replacement: $1:8888
            target_label: __address__
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod